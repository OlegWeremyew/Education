{"version":3,"sources":["components/UnControlledAccordion/Reducer.tsx","components/UnControlledAccordion/UnControlledAccordion.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["reducer","state","action","type","collapsed","UnControlledAccordion","props","useReducer","dispatchCollapsed","title","titleValue","onClick","AccordionTitle","AccordionBody","App","useState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iNAQaA,EAAU,SAACC,EAAkBC,GACtC,OAAQA,EAAOC,MACX,IAAK,mBAKD,OAJe,2BACRF,GADQ,IAEXG,WAAYH,EAAMG,YAI1B,QACI,OAAOH,I,OCXNI,EAAwB,SAACC,GAA+B,IAAD,EAE/BC,qBAAWP,EAAS,CAACI,WAAW,IAFD,mBAE3DH,EAF2D,KAEpDO,EAFoD,KAIhE,OACI,gCACI,cAAC,EAAD,CACIC,MAAOH,EAAMI,WACbC,QAAS,kBAAMH,EAAkB,CAACL,KAAM,yBAC1CF,EAAMG,WAAa,cAAC,EAAD,QAU3BQ,EAAiB,SAACN,GACpB,OACI,8BACI,qBAAIK,QAAS,WACTL,EAAMK,WADV,gBAEOL,EAAMG,MAFb,YAONI,EAAgB,WAClB,OACI,8BACI,+BACI,mCACA,mCACA,yCCiEDC,MA9FH,WAAO,IAAD,EAEwBC,mBAA2B,GAFnD,gCAGoCA,oBAAkB,IAHtD,gCAIgBA,oBAAkB,IAJlC,6BAoBd,OACI,qBAAKC,UAAW,MAAhB,SAII,cAAC,EAAD,CAAuBN,WAAY,YCxBhCO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0e3a6030.chunk.js","sourcesContent":["type ActionType = {\r\n    type: string\r\n}\r\n\r\nexport type StateType = {\r\n    collapsed: boolean\r\n}\r\n\r\nexport const reducer = (state: StateType, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case \"TOGGLE-COLLAPSED\": {\r\n            const stateCopy = {\r\n                ...state,\r\n                collapsed: !state.collapsed\r\n            }\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state\r\n        //throw new Error(\"Bad action.type\") ---- можно так\r\n    }\r\n}","import React, {useReducer} from \"react\";\r\nimport {reducer} from \"./Reducer\";\r\n\r\ntype AccordionPropsType = {\r\n    titleValue: string,\r\n}\r\n\r\nexport const UnControlledAccordion = (props: AccordionPropsType) => {\r\n\r\n    let [state, dispatchCollapsed] = useReducer(reducer, {collapsed: false})\r\n\r\n    return (\r\n        <div>\r\n            <AccordionTitle\r\n                title={props.titleValue}\r\n                onClick={() => dispatchCollapsed({type: \"TOGGLE-COLLAPSED\"})}/>\r\n            {!state.collapsed && <AccordionBody/>}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    onClick: () => void\r\n}\r\n\r\nconst AccordionTitle = (props: AccordionTitlePropsType) => {\r\n    return (\r\n        <div>\r\n            <h3 onClick={() => {\r\n                props.onClick()\r\n            }}>---{props.title}---</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AccordionBody = () => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>1</li>\r\n                <li>2</li>\r\n                <li>3</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport './App.css';\r\nimport {Accordion} from \"./components/Accordion/Accordion\";\r\nimport {RaitingValueType, Rating} from \"./components/Raiting/Rating\";\r\nimport OnOff from \"./components/OnOff/OnOff\";\r\nimport {UncontrolledOnOff} from \"./components/UncontrolledOnOff/UncontrolledOnOff\";\r\nimport {UnControlledAccordion} from \"./components/UnControlledAccordion/UnControlledAccordion\";\r\nimport {ControlledCheckbox, ControlledInput, ControlledInputWithFixedValue, ControlledSelect} from \"./stories/Input.stories\";\r\nimport {Select} from \"./components/Select/Select\";\r\nimport {SelectNotMine} from \"./components/Select/SelectNotMine\";\r\nimport {UncontrolledRating} from \"./components/UncontrolledRaiting/UncontrolledRating\";\r\n/*import {UncontrolledRating} from \"./components/UncontrolledRaiting/UncontrolledRating\";*/\r\n\r\nconst App = () => {\r\n\r\n    let [raitingValue, setRaitingValue] = useState<RaitingValueType>(0)\r\n    let [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false)\r\n    let [switchOn, setswitchOn] = useState<boolean>(false)\r\n\r\n    let onClickHandler = function () {\r\n        return \"some item was clicked\"\r\n    }\r\n\r\n    let onChangeHandler = () => {\r\n        setAccordionCollapsed(!accordionCollapsed)\r\n    }\r\n\r\n    const itemsArray = [\r\n        {title: 'oleg', value: 1},\r\n        {title: 'diana', value: 2},\r\n        {title: 'valera', value: 3},\r\n    ]\r\n\r\n    return (\r\n        <div className={'App'}>\r\n\r\n            {/*<OnOff on={switchOn} onChange={setswitchOn}/>\r\n            <UncontrolledOnOff onChange={setswitchOn}/> {switchOn.toString()}*/}\r\n            <UnControlledAccordion titleValue={\"Menu\"}/>\r\n         {/*   <Accordion titleValue={\"Menu\"}\r\n                       collapsed={accordionCollapsed}\r\n                       onChange={onChangeHandler}\r\n                       onClick={onClickHandler}\r\n                       items={itemsArray}\r\n            />\r\n            <UncontrolledRating/>\r\n            <Rating value={raitingValue}\r\n                    onClick={setRaitingValue}/>*/}\r\n\r\n            {/*  <UncontrolledOnOff/>\r\n            <UncontrolledOnOff/>*/}\r\n\r\n            {/*=================================================*/}\r\n\r\n            {/*<div>\r\n                <h4>Class 13</h4>\r\n                <div>\r\n                    <ControlledInput/>\r\n                </div>\r\n                <div>\r\n                    <ControlledCheckbox/>\r\n                </div>\r\n                <div>\r\n                    <ControlledSelect/>\r\n                </div>\r\n                <div>\r\n                    <ControlledInputWithFixedValue/>\r\n                </div>\r\n            </div>*/}\r\n\r\n            {/*=================================================*/}\r\n\r\n            {/*<div>\r\n                <h4>Class 14</h4>\r\n                <SelectNotMine value={1} onChange={() => {\r\n                }} items={itemsArray}/>\r\n                <Select value={\"my select\"} items={itemsArray}/>\r\n            </div>*/}\r\n\r\n\r\n            {/*<PageTitle title={\"This is APP component\"}/>\r\n            <PageTitle title={\"My friends\"}/>\r\n            Article 1\r\n            <UnRating value={3}/>\r\n            <UnControlledAccordion titleValue={\"Menu\"} collapsed={true}/>\r\n            <UnControlledAccordion titleValue={\"Users\"} collapsed={false}/>\r\n            Article 2\r\n            <Rating value={0}/>\r\n            <Rating value={1}/>\r\n            <Rating value={2}/>\r\n            <Rating value={3}/>\r\n            <Rating value={4}/>\r\n            <Rating value={5}/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype PageTitlePropsType = {\r\n    title: string\r\n}\r\n\r\nfunction PageTitle(props: PageTitlePropsType) {\r\n    return (\r\n        <h1>{props.title}</h1>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}